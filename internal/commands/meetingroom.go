package commands

import (
	"context"
	"fmt"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/mkokoulin/LAN-coworking-bot/internal/config"
)

func Meetingroom(ctx context.Context, update tgbotapi.Update, bot *tgbotapi.BotAPI, cfg *config.Config, args CommandsHandlerArgs) error {
	msg := tgbotapi.NewMessage(update.Message.Chat.ID, "")

	if !*args.IsBookingProcess {	
		if *args.Language == Languages[0].Lang {
			msg.Text = "Write the date and time interval for which you want to book a meeting room in the format yyyy-mm-dd hh:mm - hh:mm"
		} else if *args.Language == Languages[1].Lang {
			msg.Text = "–ù–∞–ø–∏—à–∏—Ç–µ –¥–∞—Ç—É –∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤—Ä–µ–º–µ–Ω–∏, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É –¥–ª—è –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ yyyy-mm-dd hh:mm - hh:mm"
		}
		
		*args.IsBookingProcess = true

		_, err := bot.Send(msg)
			
		return err
	} else {
		if update.Message.Text == "" {
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, "")
			msg.Text = "–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"
			bot.Send(msg)
			
			return nil
		}
	
		msgToAdmin := tgbotapi.NewMessage(cfg.AdminChatId, fmt.Sprintf("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @%s –ø—Ä–æ—Å–∏—Ç –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–∫—É - %s", update.Message.Chat.UserName, update.Message.Text))
		bot.Send(msgToAdmin)

		if *args.Language == Languages[0].Lang {
			msg.Text = "Our administrator will contact you soon üßë‚Äçüíº"
		} else if *args.Language == Languages[1].Lang {
			msg.Text = "–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä üßë‚Äçüíº"
		}
		
		bot.Send(msg)

		*args.IsBookingProcess = false
		*args.CurrentCommand = ""
	}

	return nil
}