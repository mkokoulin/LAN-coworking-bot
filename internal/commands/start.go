package commands

import (
	"context"
	"fmt"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/mkokoulin/LAN-coworking-bot/internal/config"
)

func Start(ctx context.Context, update tgbotapi.Update, bot *tgbotapi.BotAPI, cfg *config.Config, args CommandsHandlerArgs) error {
	msg := tgbotapi.NewMessage(update.Message.Chat.ID, "")

	*args.IsAuthorized = false

	if *args.Language == "" {
		if update.Message.Text != "" {
			for _, v := range Languages {
				if update.Message.Text == v.Lang {
					*args.Language = v.Lang

					if v.Lang == Languages[0].Lang {
						msg.Text = fmt.Sprintf("Selected %s", v.Lang)
					} else if v.Lang == Languages[1].Lang {
						msg.Text = fmt.Sprintf("–í—ã–±—Ä–∞–Ω %s", v.Lang)
					}

					msg.ReplyMarkup = tgbotapi.ReplyKeyboardRemove{
						RemoveKeyboard: true,
						Selective: false,
					}
				}
			}
		} else {
			return nil
		}

		if *args.Language == "" {
			Language(ctx, update, bot, cfg, args)
			return nil
		}
	}

	if *args.Language == Languages[0].Lang {
		msg.Text =
			"The Letters and Numbers space contains:\n" +
			"üíª coworking,\n" +
			"‚òïÔ∏è coffee shop and \n" +
			"‚ú® event venue.\n\n" +
			"Be sure to check out the /about section ‚Äî there you will find information about our locations and the rules of conduct in them.\n\n" +
			"Select the command to continue the dialog:\n\n" +
			"commands:\n" +
			"/start ‚Äì restart\n" +
			"/wifi ‚Äì get a password from wifi\n" +
			"/meetingroom ‚Äì book a meeting\n" +
			"/printout ‚Äì send documents for printing\n" +
			"/events ‚Äì information about events\n" +
			"/about ‚Äì information about the site and the scheme\n" +
			"/language ‚Äì changing the interface language\n"
	} else if *args.Language == Languages[1].Lang {
		msg.Text =
			"–í –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ Letters and Numbers —Ä–∞–∑–º–µ—â–∞—é—Ç—Å—è:\n" +
			"üíª –∫–æ–≤–æ—Ä–∫–∏–Ω–≥,\n" +
			"‚òïÔ∏è –∫–æ—Ñ–µ–π–Ω—è –∏\n" +
			"‚ú® –ø–ª–æ—â–∞–¥–∫–∞ –¥–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.\n\n" +
			"–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å —Ä–∞–∑–¥–µ–ª–æ–º /about ‚Äî —Ç–∞–º –≤—ã –Ω–∞–π–¥–µ—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—à–∏—Ö –ª–æ–∫–∞—Ü–∏—è—Ö –∏ –ø—Ä–∞–≤–∏–ª–∞—Ö –ø–æ–≤–µ–¥–µ–Ω–∏—è –≤ –Ω–∏—Ö.\n\n" +
			"–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –ø—Ä–æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞:\n\n" +
			"–∫–æ–º–∞–Ω–¥—ã:\n" +
			"/start ‚Äì –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫\n" +
			"/wifi ‚Äì –ø–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–æ–ª—å –æ—Ç –≤–∞–π—Ñ–∞–π\n" +
			"/meetingroom ‚Äì –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–∫—É\n" +
			"/printout ‚Äì –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ –ø–µ—á–∞—Ç—å\n" +
			"/events ‚Äì –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö\n" +
			"/about ‚Äì –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–æ—â–∞–¥–∫–µ –∏ —Å—Ö–µ–º–∞\n" +
			"/language ‚Äì —Å–º–µ–Ω–∞ —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞\n"
	}
	
	*args.CurrentCommand = ""

	_, err := bot.Send(msg)
		
	return err
}